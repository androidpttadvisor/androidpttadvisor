package gov.cdc.pttadvisor;

import java.util.ArrayList;
import android.util.Log;
import android.content.Context;
import android.util.SparseArray;

public class PTTController {

	// a mapping of nodeIds to PTTNode objects
	SparseArray<PTTNode> nodes;

	// the current node being displayed 
	PTTNode currentNode;
	
	int historyPosition;
	ArrayList<PTTHistoryItem> history;
	private Context context;
	

	public PTTController(Context c) {
		super();
		this.historyPosition = 0;
		this.context = c;
		history = new ArrayList<PTTHistoryItem>();
		
		JsonHandler jsonHandler = new JsonHandler(context);
		this.nodes = jsonHandler.getNodesFromJson();
		this.currentNode = nodes.get(0);
	}
	
	//this method returns the question for a particular node
	public String getQuestionForNodeNumber(int nodeNumber) {
		PTTNode n = this.nodes.get(nodeNumber);
		return n.getQuestion();
	}
	
	//returns the header image for a node
	public String getHeaderImageForNodeNumber(int nodeNumber) {
		PTTNode n = this.nodes.get(nodeNumber);
		return n.getHeaderImage();
	}

	
	// Stores a history item after an answer is selected.
	// history is an array of PTTHistoryItem's
	public void storeHistoryItem(PTTNode node, PTTAnswer answerChosen) {
		PTTHistoryItem historyItem = new PTTHistoryItem(node,answerChosen);
		history.add(historyItem);
	}
	
	public void truncateHistory(int positionToTruncateTo) {
		for (int i = history.size()-1; i >= positionToTruncateTo; i--) {
			history.remove(i);
		}
	}
	
	
	/*
	 * This method logs out all items in the history.
	 * TODO: Should we just remove this method and all calls to it? It was just for debugging.
	 */
	public void logHistoryItems() {
		for (int i=0; i < history.size(); i++) {
			Log.d("HISTORY_ITEM", "---");
			Log.d("HISTORY_ITEM", "Question " + (i+1) + ": " + history.get(i).getNode().getQuestion());
			Log.d("HISTORY_ITEM", "User Answered: " + history.get(i).getAnswerChosen().answer);
			Log.d("HISTORY_ITEM", "---");
		}
	}
	
	
	
	/*
	 * This method is called when an answer is chosen or when the algorithm is restarted.
	 * This is our way of having the central controller always keep track of the current node.
	 */
	public void setCurrentNode(int n) {
		Log.d("SETCURRNODE","setting current node to: " + Integer.toString(n));
		this.currentNode = this.nodes.get(n);
	}
	
	
	
	
	
	/*
	 * Autogenerated getters
	 */
	public SparseArray<PTTNode> getNodes() {
		return nodes;
	}

	public int getHistoryPosition() {
		return historyPosition;
	}

	public void setHistoryPosition(int historyPosition) {
		this.historyPosition = historyPosition;
	}
	
	public PTTNode getCurrentNode() {
		return currentNode;
	}

	
}
